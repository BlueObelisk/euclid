<argList>
	<arg name="char" 
		brief="-i"
		long="--input"
		args="file(s)_and/or_url(s)"
		class="java.lang.String"
		default=""
		min="1" 
		max="Integer.MAX_VALUE"
		method="processInput"
		>
		<help>
			INPUT:
			Input stream (Files, directories, URLs), Norma tries to guess reasonable actions. 
				also expands some simple wildcards. The argument can either be a single object, or a list. Within objects
				the content of curly brackets {...} is expanded as wildcards (cannot recurse). There can be multiple {...}
				within an object and all are expanded (but be sensible - this could generate the known universe and crash the
				system. (If this is misused it will be withdrawn). Objects (URLs, files) can be mixed but it's probably a
				poor idea.
				
				The logic is: 
				(a) if an object starts with 'www' or 'http:' or 'https;' it's assumed to be a URL
				(b) if it is a directory, then the contents (filtered by extension) are added to the list as files
				(c) if it's a file it's added to the list
				the wildcards in files and URLs are then expanded and the results added to the list
				
				Current wildcards:
				  {n1:n2} n1,n2 integers: generate n1 ... n2 inclusive
				  {foo,bar,plugh} list of strings
					  
		</help>
	</arg>	
	
	<arg name="output"
		brief="-o"
		long="--output"
		args="file_or_directory"
		class="java.lang.String"
		default=""
		min="0" 
		max="1"
		method="processOutput"
		>
		<help>
			
			OUTPUT
			 Output is to local filestore ATM. If there is only one input
			after wildcard expansion then a filename can be given. Else the argument must be a writeable directory; Norma
			will do her best to create filenames derived from the input names. Directory structures will not be preserved
			See also --recursive and --extensions",

		</help>
	</arg>	
			
	public final static ArgumentOption OUTPUT_OPTION = new ArgumentOption(
	
	<arg name="recursive"			
		brief="-r"
		long="--recursive"
		args=""
		class="java.lang.Boolean"
		default="(Booelan) false"
		min="0" 
		max="1"
		method="processRecursive"
		>
		<help>

			RECURSIVE
			input directories
			If the input is a directory then by default only the first level is searched
			if the --recursive flag is set then all files in the directory tree may be input
			See also --extensions
			
		</help>
	</arg>	
	
	<arg name="extensions"
		brief="-e"
		long="--extensions"
		args="ext1 [ext2...]"
		class="java.lang.String"
		default=""
		min="1" 
		max="Integer.MAX_VALUE"
		method="processExtensions"
		>
		<help>
			
			EXTENSIONS
				When a directory or directories are searched then all files are input by default
				It is possible to limit the search by using only certain extensions
				See also --recursive.
			
		</help>
	</arg>
		
	<arg name="help"
		brief="-h"
		long="--help"
		args=" "
		class="java.lang.String"
		default=""
		min="0" 
		max="0"
		method="processHelp"
		>
		<help>
			
			HELP
				outputs help for all options, including superclass DefaultArgProcessor
		</help>
	</arg>	
</argList>
			